{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Vacation-Suggestions-App\\\\frontend\\\\src\\\\components\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // Stocăm mesajele\n  const [input, setInput] = useState(\"\"); // Stocăm input-ul utilizatorului\n\n  // Funcția care se ocupă de trimiterea mesajelor\n  const handleSendMessage = () => {\n    if (input.trim() === \"\") return; // Nu trimitem mesaje goale\n\n    // Adăugăm mesajul utilizatorului\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n\n    // Simulăm un răspuns din partea chatbot-ului\n    setTimeout(() => {\n      const botMessage = {\n        text: `Bot: You said \"${input}\"`,\n        sender: \"bot\"\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    }, 2000); // Răspunsul chatbot-ului vine după 1 secundă\n\n    // Resetăm input-ul\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat with Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","input","setInput","handleSendMessage","trim","userMessage","text","sender","prevMessages","setTimeout","botMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Documents/GitHub/Vacation-Suggestions-App/frontend/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([]); // Stocăm mesajele\r\n  const [input, setInput] = useState(\"\"); // Stocăm input-ul utilizatorului\r\n\r\n  // Funcția care se ocupă de trimiterea mesajelor\r\n  const handleSendMessage = () => {\r\n    if (input.trim() === \"\") return; // Nu trimitem mesaje goale\r\n\r\n    // Adăugăm mesajul utilizatorului\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n    // Simulăm un răspuns din partea chatbot-ului\r\n    setTimeout(() => {\r\n      const botMessage = { text: `Bot: You said \"${input}\"`, sender: \"bot\" };\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    }, 2000); // Răspunsul chatbot-ului vine după 1 secundă\r\n\r\n    // Resetăm input-ul\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-window\">\r\n        <div className=\"chat-header\">\r\n          <h3>Chat with Bot</h3>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className={`message ${message.sender}`}>\r\n              <span>{message.text}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n          />\r\n          <button onClick={handleSendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}