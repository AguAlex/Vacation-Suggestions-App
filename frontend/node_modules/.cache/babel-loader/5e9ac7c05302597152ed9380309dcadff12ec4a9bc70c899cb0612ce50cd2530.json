{"ast":null,"code":"var _jsxFileName = \"/home/cosmin/Documents/GitHub/Vacation-Suggestions-App/frontend/src/components/Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [botTimeout, setBotTimeout] = useState(null); // Stocăm timeout-ul pentru bot\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll la ultimul mesaj\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const typeBotMessage = (fullText, chat = activeChat) => {\n    let index = 0;\n    const words = fullText.split(\" \");\n    let currentText = \"\";\n    const interval = setInterval(() => {\n      if (index < words.length) {\n        currentText += (index === 0 ? \"\" : \" \") + words[index];\n        index++;\n        setMessages(prevMessages => {\n          const last = prevMessages[prevMessages.length - 1];\n          if (last && last.sender === \"bot\" && last.chat === chat) {\n            const updated = [...prevMessages];\n            updated[updated.length - 1] = {\n              ...last,\n              text: currentText\n            };\n            return updated;\n          } else {\n            return [...prevMessages, {\n              text: currentText,\n              sender: \"bot\",\n              chat,\n              isHtml: true\n            }];\n          }\n        });\n      } else {\n        clearInterval(interval);\n      }\n    }, 150);\n  };\n  const handleSearchVacations = async () => {\n    setActiveChat(\"vacations\");\n    const response = await fetch(`http://localhost:3000/cities?name=${input}`);\n    const data = await response.json();\n    if (data && Array.isArray(data) && data.length > 0) {\n      const cityIds = data.map(city => city.id);\n      setCityIds(cityIds);\n      if (cityIds.length > 0) {\n        const poiResponse = await fetch(`http://localhost:3000/points_of_interests?city_id=${cityIds}`);\n        const poiData = await poiResponse.json();\n        setPoiData(poiData);\n        const hotelResponse = await fetch(`http://localhost:3000/accomodations?city_id=${cityIds}`);\n        const hotelData = await hotelResponse.json();\n        setHotelData(hotelData);\n        const poiNames = poiData.map(poi => poi.name).join(\", \");\n        const hotelNames = hotelData.map(hotel => hotel.name).join(\", \");\n        const combinedText = `I found the following points of interest: ${poiNames}.\\nHotels: ${hotelNames}.`;\n        typeBotMessage(combinedText, \"vacations\");\n      }\n    } else {\n      typeBotMessage(`Sorry, I couldn't find any cities with the name \"${input}\".`, \"vacations\");\n    }\n    setInput(\"\");\n  };\n  const handleNewVacationsChat = () => {\n    setActiveChat(\"vacations\");\n    setInput(\"\");\n    const welcomeText = \"Let's find your next vacation! 🌴✈️\\nType a city name to begin.\";\n    typeBotMessage(welcomeText, \"vacations\");\n  };\n  const handleNewChatGPT = async () => {\n    var _storedUser, _storedUser2;\n    setActiveChat(\"chatGPT\");\n    const userPrompt = `Hello! My name is ${((_storedUser = storedUser) === null || _storedUser === void 0 ? void 0 : _storedUser.nume) || \"user\"} and from now on you will address me as ${((_storedUser2 = storedUser) === null || _storedUser2 === void 0 ? void 0 : _storedUser2.nume) || \"user\"}. Hello!`;\n    try {\n      const response = await fetch(\"http://localhost:5001/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userPrompt\n        }) // userPrompt aici\n      });\n      const data = await response.json();\n      typeBotMessage(data.response, \"chatGPT\"); // raspunsul din backend este in campul \"response\"\n    } catch (error) {\n      console.error(\"Error:\", error);\n      typeBotMessage(\"Sorry, something went wrong. 😓\", \"chatGPT\");\n    }\n  };\n  function makeLinksClickable(text) {\n    return text.replace(/(https?:\\/\\/[^\\s]+)/g, '<a href=\"$1\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>');\n  }\n  const handleChatGPTMessage = async messageText => {\n    try {\n      const response = await fetch(\"http://localhost:5001/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userPrompt: messageText\n        }) // userPrompt aici\n      });\n      const data = await response.json();\n      const clickable = makeLinksClickable(data.response);\n      typeBotMessage(clickable, \"chatGPT\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      typeBotMessage(\"Sorry, something went wrong. 😓\", \"chatGPT\");\n    }\n  };\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      text: input,\n      sender: \"user\",\n      chat: activeChat\n    };\n    setMessages(prev => [...prev, userMessage]);\n    if (activeChat === \"chatGPT\") {\n      await handleChatGPTMessage(input);\n    } else if (activeChat === \"vacations\") {\n      await handleSearchVacations(input);\n    }\n    setInput(\"\");\n  };\n  const handleNewChat = () => {\n    // Anulăm timeout-ul dacă există și botul nu a trimis încă mesajul\n    if (botTimeout) {\n      clearTimeout(botTimeout);\n    }\n\n    // Resetează mesajele și restul stărilor pentru a începe un nou chat\n    setMessages([]);\n    setBotTimeout(null); // Resetăm și timeout-ul\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-chat\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-chat-btn\",\n            onClick: handleNewChat,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"24\",\n              height: \"24\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              className: \"feather feather-message-circle\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M21 2v12a4 4 0 0 1-4 4H4l-2 3V6a4 4 0 0 1 4-4h14a4 4 0 0 1 4 4z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"new-chat-text\",\n              children: \"New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewVacationsChat,\n            className: activeChat === \"vacations\" ? \"active\" : \"\",\n            children: \"\\uD83D\\uDD0D Search Vacations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewChatGPT,\n            className: activeChat === \"chatGPT\" ? \"active\" : \"\",\n            children: \"\\uD83D\\uDCAC Talk to Bot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleShowLinks,\n            className: activeChat === \"links\" ? \"active\" : \"\",\n            children: \"\\uD83D\\uDD17 Useful Links\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: message.sender === \"bot\" ? \"https://miro.medium.com/v2/resize:fit:4800/format:webp/1*I9KrlBSL9cZmpQU3T2nq-A.jpeg\" : \"https://img.freepik.com/free-vector/blue-circle-with-white-user_78370-4707.jpg?t=st=1746549894~exp=1746553494~hmac=2f00b3d3854ad17093df1bbe06f43e8560b94e719e6a20b2a74b5743b463c5ef&w=826\",\n                alt: message.sender === \"bot\" ? \"Bot\" : \"User\",\n                className: \"avatar-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              dangerouslySetInnerHTML: message.isHtml ? {\n                __html: message.text\n              } : undefined,\n              children: !message.isHtml ? message.text : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 16\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"messagesEnd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), activeChat && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: \"Type a message...\",\n            onKeyPress: e => e.key === \"Enter\" && handleSendMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\",\n          onKeyPress: e => {\n            if (e.key === \"Enter\") handleSendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"k1BNXCh22LiQrUHXDTyvw0zKp04=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","input","setInput","botTimeout","setBotTimeout","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","typeBotMessage","fullText","chat","activeChat","index","words","split","currentText","interval","setInterval","length","prevMessages","last","sender","updated","text","isHtml","clearInterval","handleSearchVacations","setActiveChat","response","fetch","data","json","Array","isArray","cityIds","map","city","id","setCityIds","poiResponse","poiData","setPoiData","hotelResponse","hotelData","setHotelData","poiNames","poi","name","join","hotelNames","hotel","combinedText","handleNewVacationsChat","welcomeText","handleNewChatGPT","_storedUser","_storedUser2","userPrompt","storedUser","nume","method","headers","body","JSON","stringify","error","console","makeLinksClickable","replace","handleChatGPTMessage","messageText","clickable","handleSendMessage","trim","userMessage","prev","handleNewChat","clearTimeout","className","children","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","fileName","_jsxFileName","lineNumber","columnNumber","handleShowLinks","message","src","alt","dangerouslySetInnerHTML","__html","undefined","type","value","onChange","e","target","placeholder","onKeyPress","key","ref","_c","$RefreshReg$"],"sources":["/home/cosmin/Documents/GitHub/Vacation-Suggestions-App/frontend/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chatbot.css\";\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [botTimeout, setBotTimeout] = useState(null); // Stocăm timeout-ul pentru bot\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll la ultimul mesaj\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const typeBotMessage = (fullText, chat = activeChat) => {\n    let index = 0;\n    const words = fullText.split(\" \");\n    let currentText = \"\";\n\n    const interval = setInterval(() => {\n      if (index < words.length) {\n        currentText += (index === 0 ? \"\" : \" \") + words[index];\n        index++;\n\n        setMessages((prevMessages) => {\n          const last = prevMessages[prevMessages.length - 1];\n          if (last && last.sender === \"bot\" && last.chat === chat) {\n            const updated = [...prevMessages];\n            updated[updated.length - 1] = { ...last, text: currentText };\n            return updated;\n          } else {\n            return [...prevMessages, { text: currentText, sender: \"bot\", chat, isHtml: true }];\n          }\n        });\n      } else {\n        clearInterval(interval);\n      }\n    }, 150);\n  };\n\n  const handleSearchVacations = async () => {\n    setActiveChat(\"vacations\");\n    const response = await fetch(`http://localhost:3000/cities?name=${input}`);\n    const data = await response.json();\n\n    if (data && Array.isArray(data) && data.length > 0) {\n      const cityIds = data.map((city) => city.id);\n      setCityIds(cityIds);\n\n      if (cityIds.length > 0) {\n        const poiResponse = await fetch(\n          `http://localhost:3000/points_of_interests?city_id=${cityIds}`\n        );\n        const poiData = await poiResponse.json();\n        setPoiData(poiData);\n\n        const hotelResponse = await fetch(\n          `http://localhost:3000/accomodations?city_id=${cityIds}`\n        );\n        const hotelData = await hotelResponse.json();\n        setHotelData(hotelData);\n\n        const poiNames = poiData.map((poi) => poi.name).join(\", \");\n        const hotelNames = hotelData.map((hotel) => hotel.name).join(\", \");\n\n        const combinedText = `I found the following points of interest: ${poiNames}.\\nHotels: ${hotelNames}.`;\n        typeBotMessage(combinedText, \"vacations\");\n      }\n    } else {\n      typeBotMessage(`Sorry, I couldn't find any cities with the name \"${input}\".`, \"vacations\");\n    }\n\n    setInput(\"\");\n  };\n\n  const handleNewVacationsChat = () => {\n    setActiveChat(\"vacations\");\n    setInput(\"\");\n    const welcomeText = \"Let's find your next vacation! 🌴✈️\\nType a city name to begin.\";\n    typeBotMessage(welcomeText, \"vacations\");\n  };\n\n  const handleNewChatGPT = async () => {\n  setActiveChat(\"chatGPT\");\n\n  const userPrompt = `Hello! My name is ${storedUser?.nume || \"user\"} and from now on you will address me as ${storedUser?.nume || \"user\"}. Hello!`;\n\n  try {\n    const response = await fetch(\"http://localhost:5001/chat\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ userPrompt }),  // userPrompt aici\n    });\n\n    const data = await response.json();\n    typeBotMessage(data.response, \"chatGPT\"); // raspunsul din backend este in campul \"response\"\n  } catch (error) {\n    console.error(\"Error:\", error);\n    typeBotMessage(\"Sorry, something went wrong. 😓\", \"chatGPT\");\n  }\n};\nfunction makeLinksClickable(text) {\n  return text.replace(\n    /(https?:\\/\\/[^\\s]+)/g,\n    '<a href=\"$1\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\n  );\n}\nconst handleChatGPTMessage = async (messageText) => {\n  try {\n    const response = await fetch(\"http://localhost:5001/chat\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ userPrompt: messageText }),  // userPrompt aici\n    });\n\n    const data = await response.json();\n    const clickable = makeLinksClickable(data.response);\n\n    typeBotMessage(clickable, \"chatGPT\");\n  } catch (error) {\n    console.error(\"Error:\", error);\n    typeBotMessage(\"Sorry, something went wrong. 😓\", \"chatGPT\");\n  }\n};\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n\n    const userMessage = { text: input, sender: \"user\", chat: activeChat };\n    setMessages((prev) => [...prev, userMessage]);\n\n    if (activeChat === \"chatGPT\") {\n      await handleChatGPTMessage(input);\n    } else if (activeChat === \"vacations\") {\n      await handleSearchVacations(input);\n    }\n\n    setInput(\"\");\n  };\n\n  const handleNewChat = () => {\n    // Anulăm timeout-ul dacă există și botul nu a trimis încă mesajul\n    if (botTimeout) {\n      clearTimeout(botTimeout);\n    }\n    \n    // Resetează mesajele și restul stărilor pentru a începe un nou chat\n    setMessages([]);\n    setBotTimeout(null); // Resetăm și timeout-ul\n  };\n  \n  \n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chat-window\">\n        <div className=\"chat-header\">\n          <div className=\"new-chat\">\n            <button className=\"new-chat-btn\" onClick={handleNewChat}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-message-circle\"\n              >\n                <path d=\"M21 2v12a4 4 0 0 1-4 4H4l-2 3V6a4 4 0 0 1 4-4h14a4 4 0 0 1 4 4z\"></path>\n              </svg>\n              <span className=\"new-chat-text\">New Chat</span>\n            </button>\n          </div>\n\n          <div className=\"chat-actions\">\n            <button\n              onClick={handleNewVacationsChat}\n              className={activeChat === \"vacations\" ? \"active\" : \"\"}\n            >\n              🔍 Search Vacations\n            </button>\n            <button\n              onClick={handleNewChatGPT}\n              className={activeChat === \"chatGPT\" ? \"active\" : \"\"}\n            >\n              💬 Talk to Bot\n            </button>\n            <button\n              onClick={handleShowLinks}\n              className={activeChat === \"links\" ? \"active\" : \"\"}\n            >\n              🔗 Useful Links\n            </button>\n          </div>\n\n          <div className=\"chat-messages\">\n            {messages.map((message, index) => (\n              <div key={index} className={`message ${message.sender}`}>\n                <div className=\"avatar\">\n                  <img\n                    src={message.sender === \"bot\" ? \"https://miro.medium.com/v2/resize:fit:4800/format:webp/1*I9KrlBSL9cZmpQU3T2nq-A.jpeg\" : \"https://img.freepik.com/free-vector/blue-circle-with-white-user_78370-4707.jpg?t=st=1746549894~exp=1746553494~hmac=2f00b3d3854ad17093df1bbe06f43e8560b94e719e6a20b2a74b5743b463c5ef&w=826\"}\n                    alt={message.sender === \"bot\" ? \"Bot\" : \"User\"}\n                    className=\"avatar-img\"\n                  />\n                </div>\n               <div\n  className=\"message-text\"\n  dangerouslySetInnerHTML={message.isHtml ? { __html: message.text } : undefined}\n>\n  {!message.isHtml ? message.text : null}\n</div>\n              </div>\n            ))}\n            <div id=\"messagesEnd\" />\n          </div>\n\n\n          {activeChat && (\n            <div className=\"chat-input\">\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type a message...\"\n                onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\n              />\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              <span>{message.text}</span>\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type a message...\"\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") handleSendMessage();\n            }}\n          />\n          <button onClick={handleSendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}