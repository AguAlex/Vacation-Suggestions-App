{"ast":null,"code":"var _jsxFileName = \"/home/cosmin/Documents/GitHub/Vacation-Suggestions-App/frontend/src/components/Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [cityIds, setCityIds] = useState([]);\n  const [poiData, setPoiData] = useState([]);\n  const [hotelData, setHotelData] = useState([]);\n  const [botTimeout, setBotTimeout] = useState(null);\n  const [activeChat, setActiveChat] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    const messagesEndRef = document.getElementById(\"messagesEnd\");\n    messagesEndRef === null || messagesEndRef === void 0 ? void 0 : messagesEndRef.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const typeBotMessage = (fullText, chat = activeChat) => {\n    let index = 0;\n    const words = fullText.split(\" \");\n    let currentText = \"\";\n    const interval = setInterval(() => {\n      if (index < words.length) {\n        currentText += (index === 0 ? \"\" : \" \") + words[index];\n        index++;\n        setMessages(prevMessages => {\n          const last = prevMessages[prevMessages.length - 1];\n          if (last && last.sender === \"bot\" && last.chat === chat) {\n            const updated = [...prevMessages];\n            updated[updated.length - 1] = {\n              ...last,\n              text: currentText\n            };\n            return updated;\n          } else {\n            return [...prevMessages, {\n              text: currentText,\n              sender: \"bot\",\n              chat,\n              isHtml: true\n            }];\n          }\n        });\n      } else {\n        clearInterval(interval);\n      }\n    }, 150);\n  };\n  const handleSearchVacations = async () => {\n    setActiveChat(\"vacations\");\n    const response = await fetch(`http://localhost:3000/cities?name=${input}`);\n    const data = await response.json();\n    if (data && Array.isArray(data) && data.length > 0) {\n      const cityIds = data.map(city => city.id);\n      setCityIds(cityIds);\n      if (cityIds.length > 0) {\n        const poiResponse = await fetch(`http://localhost:3000/points_of_interests?city_id=${cityIds}`);\n        const poiData = await poiResponse.json();\n        setPoiData(poiData);\n        const hotelResponse = await fetch(`http://localhost:3000/accomodations?city_id=${cityIds}`);\n        const hotelData = await hotelResponse.json();\n        setHotelData(hotelData);\n        const poiNames = poiData.map(poi => poi.name).join(\", \");\n        const hotelNames = hotelData.map(hotel => hotel.name).join(\", \");\n        const combinedText = `I found the following points of interest: ${poiNames}.\\nHotels: ${hotelNames}.`;\n        typeBotMessage(combinedText, \"vacations\");\n      }\n    } else {\n      typeBotMessage(`Sorry, I couldn't find any cities with the name \"${input}\".`, \"vacations\");\n    }\n    setInput(\"\");\n  };\n  const handleNewVacationsChat = () => {\n    setActiveChat(\"vacations\");\n    setInput(\"\");\n    const welcomeText = \"Let's find your next vacation! 🌴✈️\\nType a city name to begin.\";\n    typeBotMessage(welcomeText, \"vacations\");\n  };\n  const handleNewChatGPT = async () => {\n    setActiveChat(\"chatGPT\");\n    const userPrompt = `Hello! My name is ${(storedUser === null || storedUser === void 0 ? void 0 : storedUser.nume) || \"user\"} and from now on you will address me as ${(storedUser === null || storedUser === void 0 ? void 0 : storedUser.nume) || \"user\"}. Hello!`;\n    try {\n      const response = await fetch(\"http://localhost:5001/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userPrompt\n        }) // userPrompt aici\n      });\n      const data = await response.json();\n      typeBotMessage(data.response, \"chatGPT\"); // raspunsul din backend este in campul \"response\"\n    } catch (error) {\n      console.error(\"Error:\", error);\n      typeBotMessage(\"Sorry, something went wrong. 😓\", \"chatGPT\");\n    }\n  };\n  function makeLinksClickable(text) {\n    return text.replace(/(https?:\\/\\/[^\\s]+)/g, '<a href=\"$1\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>');\n  }\n  const handleChatGPTMessage = async messageText => {\n    try {\n      const response = await fetch(\"http://localhost:5001/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userPrompt: messageText\n        }) // userPrompt aici\n      });\n      const data = await response.json();\n      const clickable = makeLinksClickable(data.response);\n      typeBotMessage(clickable, \"chatGPT\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      typeBotMessage(\"Sorry, something went wrong. 😓\", \"chatGPT\");\n    }\n  };\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      text: input,\n      sender: \"user\",\n      chat: activeChat\n    };\n    setMessages(prev => [...prev, userMessage]);\n    if (activeChat === \"chatGPT\") {\n      await handleChatGPTMessage(input);\n    } else if (activeChat === \"vacations\") {\n      await handleSearchVacations(input);\n    }\n    setInput(\"\");\n  };\n  const handleNewChat = () => {\n    if (botTimeout) clearTimeout(botTimeout);\n    setMessages([]);\n    setPoiData([]);\n    setBotTimeout(null);\n    setActiveChat(null);\n  };\n  const handleShowLinks = () => {\n    setActiveChat(\"links\");\n    const msg = `Here are some useful links:\\n- 🌍 Travel Portal: https://travel.example.com\\n- 🏨 Hotels: https://hotels.example.com\\n- 📞 Contact Support: https://support.example.com`;\n    typeBotMessage(msg, \"links\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-fixed-container\",\n    children: !isOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggle-btn\",\n      onClick: () => setIsOpen(true),\n      title: \"Open Chat\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-chat\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-chat-btn\",\n            onClick: handleNewChat,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"24\",\n              height: \"24\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              className: \"feather feather-message-circle\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M21 2v12a4 4 0 0 1-4 4H4l-2 3V6a4 4 0 0 1 4-4h14a4 4 0 0 1 4 4z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"new-chat-text\",\n              children: \"New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Chat with Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setIsOpen(false),\n          title: \"Close\",\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewVacationsChat,\n          className: activeChat === \"vacations\" ? \"active\" : \"\",\n          children: \"\\uD83D\\uDD0D Search Vacations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChatGPT,\n          className: activeChat === \"chatGPT\" ? \"active\" : \"\",\n          children: \"\\uD83D\\uDCAC Talk to Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShowLinks,\n          className: activeChat === \"links\" ? \"active\" : \"\",\n          children: \"\\uD83D\\uDD17 Useful Links\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.sender === \"bot\" ? \"https://miro.medium.com/v2/resize:fit:4800/format:webp/1*I9KrlBSL9cZmpQU3T2nq-A.jpeg\" : \"https://img.freepik.com/free-vector/blue-circle-with-white-user_78370-4707.jpg?t=st=1746549894~exp=1746553494~hmac=2f00b3d3854ad17093df1bbe06f43e8560b94e719e6a20b2a74b5743b463c5ef&w=826\",\n              alt: message.sender === \"bot\" ? \"Bot\" : \"User\",\n              className: \"avatar-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            dangerouslySetInnerHTML: message.isHtml ? {\n              __html: message.text\n            } : undefined,\n            children: !message.isHtml && message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 16\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"messagesEnd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), activeChat && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\",\n          onKeyPress: e => e.key === \"Enter\" && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"2fQbeuH5b1AF3eiFXJf5ah074kQ=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","input","setInput","cityIds","setCityIds","poiData","setPoiData","hotelData","setHotelData","botTimeout","setBotTimeout","activeChat","setActiveChat","isOpen","setIsOpen","storedUser","JSON","parse","localStorage","getItem","messagesEndRef","document","getElementById","scrollIntoView","behavior","typeBotMessage","fullText","chat","index","words","split","currentText","interval","setInterval","length","prevMessages","last","sender","updated","text","isHtml","clearInterval","handleSearchVacations","response","fetch","data","json","Array","isArray","map","city","id","poiResponse","hotelResponse","poiNames","poi","name","join","hotelNames","hotel","combinedText","handleNewVacationsChat","welcomeText","handleNewChatGPT","userPrompt","nume","method","headers","body","stringify","error","console","makeLinksClickable","replace","handleChatGPTMessage","messageText","clickable","handleSendMessage","trim","userMessage","prev","handleNewChat","clearTimeout","handleShowLinks","msg","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","message","src","alt","dangerouslySetInnerHTML","__html","undefined","type","value","onChange","e","target","placeholder","onKeyPress","key","_c","$RefreshReg$"],"sources":["/home/cosmin/Documents/GitHub/Vacation-Suggestions-App/frontend/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\";\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [cityIds, setCityIds] = useState([]);\n  const [poiData, setPoiData] = useState([]);\n  const [hotelData, setHotelData] = useState([]);\n  const [botTimeout, setBotTimeout] = useState(null);\n  const [activeChat, setActiveChat] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    const messagesEndRef = document.getElementById(\"messagesEnd\");\n    messagesEndRef?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const typeBotMessage = (fullText, chat = activeChat) => {\n    let index = 0;\n    const words = fullText.split(\" \");\n    let currentText = \"\";\n\n    const interval = setInterval(() => {\n      if (index < words.length) {\n        currentText += (index === 0 ? \"\" : \" \") + words[index];\n        index++;\n\n        setMessages((prevMessages) => {\n          const last = prevMessages[prevMessages.length - 1];\n          if (last && last.sender === \"bot\" && last.chat === chat) {\n            const updated = [...prevMessages];\n            updated[updated.length - 1] = { ...last, text: currentText };\n            return updated;\n          } else {\n            return [...prevMessages, { text: currentText, sender: \"bot\", chat, isHtml: true }];\n          }\n        });\n      } else {\n        clearInterval(interval);\n      }\n    }, 150);\n  };\n\n  const handleSearchVacations = async () => {\n    setActiveChat(\"vacations\");\n    const response = await fetch(`http://localhost:3000/cities?name=${input}`);\n    const data = await response.json();\n\n    if (data && Array.isArray(data) && data.length > 0) {\n      const cityIds = data.map((city) => city.id);\n      setCityIds(cityIds);\n\n      if (cityIds.length > 0) {\n        const poiResponse = await fetch(\n          `http://localhost:3000/points_of_interests?city_id=${cityIds}`\n        );\n        const poiData = await poiResponse.json();\n        setPoiData(poiData);\n\n        const hotelResponse = await fetch(\n          `http://localhost:3000/accomodations?city_id=${cityIds}`\n        );\n        const hotelData = await hotelResponse.json();\n        setHotelData(hotelData);\n\n        const poiNames = poiData.map((poi) => poi.name).join(\", \");\n        const hotelNames = hotelData.map((hotel) => hotel.name).join(\", \");\n\n        const combinedText = `I found the following points of interest: ${poiNames}.\\nHotels: ${hotelNames}.`;\n        typeBotMessage(combinedText, \"vacations\");\n      }\n    } else {\n      typeBotMessage(`Sorry, I couldn't find any cities with the name \"${input}\".`, \"vacations\");\n    }\n\n    setInput(\"\");\n  };\n\n  const handleNewVacationsChat = () => {\n    setActiveChat(\"vacations\");\n    setInput(\"\");\n    const welcomeText = \"Let's find your next vacation! 🌴✈️\\nType a city name to begin.\";\n    typeBotMessage(welcomeText, \"vacations\");\n  };\n\n  const handleNewChatGPT = async () => {\n  setActiveChat(\"chatGPT\");\n\n  const userPrompt = `Hello! My name is ${storedUser?.nume || \"user\"} and from now on you will address me as ${storedUser?.nume || \"user\"}. Hello!`;\n\n  try {\n    const response = await fetch(\"http://localhost:5001/chat\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ userPrompt }),  // userPrompt aici\n    });\n\n    const data = await response.json();\n    typeBotMessage(data.response, \"chatGPT\"); // raspunsul din backend este in campul \"response\"\n  } catch (error) {\n    console.error(\"Error:\", error);\n    typeBotMessage(\"Sorry, something went wrong. 😓\", \"chatGPT\");\n  }\n};\nfunction makeLinksClickable(text) {\n  return text.replace(\n    /(https?:\\/\\/[^\\s]+)/g,\n    '<a href=\"$1\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\n  );\n}\nconst handleChatGPTMessage = async (messageText) => {\n  try {\n    const response = await fetch(\"http://localhost:5001/chat\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ userPrompt: messageText }),  // userPrompt aici\n    });\n\n    const data = await response.json();\n    const clickable = makeLinksClickable(data.response);\n\n    typeBotMessage(clickable, \"chatGPT\");\n  } catch (error) {\n    console.error(\"Error:\", error);\n    typeBotMessage(\"Sorry, something went wrong. 😓\", \"chatGPT\");\n  }\n};\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n\n    const userMessage = { text: input, sender: \"user\", chat: activeChat };\n    setMessages((prev) => [...prev, userMessage]);\n\n    if (activeChat === \"chatGPT\") {\n      await handleChatGPTMessage(input);\n    } else if (activeChat === \"vacations\") {\n      await handleSearchVacations(input);\n    }\n\n    setInput(\"\");\n  };\n\n  const handleNewChat = () => {\n    if (botTimeout) clearTimeout(botTimeout);\n    setMessages([]);\n    setPoiData([]);\n    setBotTimeout(null);\n    setActiveChat(null);\n  };\n\n  const handleShowLinks = () => {\n    setActiveChat(\"links\");\n    const msg = `Here are some useful links:\\n- 🌍 Travel Portal: https://travel.example.com\\n- 🏨 Hotels: https://hotels.example.com\\n- 📞 Contact Support: https://support.example.com`;\n    typeBotMessage(msg, \"links\");\n  };\n\n  return (\n    <div className=\"chatbot-fixed-container\">\n      {!isOpen ? (\n        <button className=\"chatbot-toggle-btn\" onClick={() => setIsOpen(true)} title=\"Open Chat\">\n          💬\n        </button>\n      ) : (\n        <div className=\"chat-window\">\n          <div className=\"chat-header\">\n            <div className=\"new-chat\">\n                <button className=\"new-chat-btn\" onClick={handleNewChat}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-message-circle\"\n                  >\n                    <path d=\"M21 2v12a4 4 0 0 1-4 4H4l-2 3V6a4 4 0 0 1 4-4h14a4 4 0 0 1 4 4z\"></path>\n                  </svg>\n                  <span className=\"new-chat-text\">New Chat</span>\n                </button>\n            </div>\n            <span>Chat with Bot</span>\n            <button className=\"close-btn\" onClick={() => setIsOpen(false)} title=\"Close\">\n              ✖\n            </button>\n          </div>\n\n          <div className=\"chat-actions\">\n            <button\n              onClick={handleNewVacationsChat}\n              className={activeChat === \"vacations\" ? \"active\" : \"\"}\n            >\n              🔍 Search Vacations\n            </button>\n            <button\n              onClick={handleNewChatGPT}\n              className={activeChat === \"chatGPT\" ? \"active\" : \"\"}\n            >\n              💬 Talk to Bot\n            </button>\n            <button\n              onClick={handleShowLinks}\n              className={activeChat === \"links\" ? \"active\" : \"\"}\n            >\n              🔗 Useful Links\n            </button>\n          </div>\n\n          <div className=\"chat-messages\">\n            {messages.map((message, index) => (\n              <div key={index} className={`message ${message.sender}`}>\n                <div className=\"avatar\">\n                  <img\n                    src={message.sender === \"bot\" ? \"https://miro.medium.com/v2/resize:fit:4800/format:webp/1*I9KrlBSL9cZmpQU3T2nq-A.jpeg\" : \"https://img.freepik.com/free-vector/blue-circle-with-white-user_78370-4707.jpg?t=st=1746549894~exp=1746553494~hmac=2f00b3d3854ad17093df1bbe06f43e8560b94e719e6a20b2a74b5743b463c5ef&w=826\"}\n                    alt={message.sender === \"bot\" ? \"Bot\" : \"User\"}\n                    className=\"avatar-img\"\n                  />\n                </div>\n               <div\n  className=\"message-text\"\n  dangerouslySetInnerHTML={message.isHtml ? { __html: message.text } : undefined}\n>\n  {!message.isHtml && message.text}\n</div>\n              </div>\n            ))}\n            <div id=\"messagesEnd\" />\n          </div>\n\n\n          {activeChat && (\n            <div className=\"chat-input\">\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type a message...\"\n                onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\n              />\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}