{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Vacation-Suggestions-App\\\\frontend\\\\src\\\\pages\\\\POIMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"./POIMap.css\";\nimport MapLegend from \"../components/MapLegend\";\nimport POIPopup from \"./POIPopup\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Marker galben pentru POI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst poiIcon = new L.Icon({\n  iconUrl: \"https://maps.google.com/mapfiles/ms/icons/yellow-dot.png\",\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\n\n// Marker albastru pentru aeroporturi\nconst airportIcon = new L.Icon({\n  iconUrl: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png\",\n  iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n  shadowUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png\"\n});\nconst POIMap = () => {\n  _s();\n  const [pois, setPois] = useState([]);\n  const [airports, setAirports] = useState([]);\n  const [selectedAirports, setSelectedAirports] = useState([]);\n  const [city1, setCity1] = useState(\"\");\n  const [city2, setCity2] = useState(\"\");\n  const [routes, setRoutes] = useState([]); // array de perechi de aeroporturi conectate\n\n  const handleAirportClick = airport => {\n    setSelectedAirports(prev => {\n      if (prev.length === 0) {\n        return [airport];\n      } else if (prev.length === 1) {\n        // dacă dai click pe același aeroport îl ignorăm\n        if (prev[0].id === airport.id) return prev;\n        return [prev[0], airport];\n      } else {\n        // dacă sunt deja 2 aeroporturi, resetează la primul click nou\n        return [airport];\n      }\n    });\n  };\n  const handleConnectCities = () => {\n    // Filtrăm aeroporturile după orașe (case insensitive)\n    const airportsCity1 = airports.filter(airport => {\n      var _airport$cityName;\n      return ((_airport$cityName = airport.cityName) === null || _airport$cityName === void 0 ? void 0 : _airport$cityName.toLowerCase()) === city1.trim().toLowerCase();\n    });\n    const airportsCity2 = airports.filter(airport => {\n      var _airport$cityName2;\n      return ((_airport$cityName2 = airport.cityName) === null || _airport$cityName2 === void 0 ? void 0 : _airport$cityName2.toLowerCase()) === city2.trim().toLowerCase();\n    });\n\n    // Construim toate perechile posibile între aeroporturile celor 2 orașe\n    let newRoutes = [];\n    airportsCity1.forEach(a1 => {\n      airportsCity2.forEach(a2 => {\n        newRoutes.push([a1, a2]);\n      });\n    });\n    setRoutes(newRoutes);\n  };\n  useEffect(() => {\n    fetch(\"http://localhost:3000/points_of_interests\").then(res => res.json()).then(data => {\n      console.log(\"POI data:\", data);\n      setPois(data);\n    }).catch(err => console.error(\"Failed to load POIs:\", err));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/airports\").then(res => res.json()).then(data => {\n      console.log(\"Airport data:\", data);\n      setAirports(data);\n    }).catch(err => console.error(\"Failed to load Airports:\", err));\n  }, []);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [40.71427, -74.00597],\n      zoom: 3,\n      minZoom: 3,\n      maxZoom: 15,\n      scrollWheelZoom: true,\n      className: \"leaflet-container\",\n      maxBounds: [[-85.05112878, -180], [85.05112878, 180]],\n      maxBoundsViscosity: 1,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\",\n        noWrap: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), pois.map((poi, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [poi.latitude, poi.longitude],\n        icon: poiIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          maxWidth: 240,\n          children: /*#__PURE__*/_jsxDEV(POIPopup, {\n            poi: poi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, `poi-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)), airports.map((airport, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [airport.latitude, airport.longitude],\n        icon: airportIcon,\n        eventHandlers: {\n          click: () => handleAirportClick(airport)\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: airport.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), airport.description || \"No description\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, `airport-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)), selectedAirports.length === 2 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: [[selectedAirports[0].latitude, selectedAirports[0].longitude], [selectedAirports[1].latitude, selectedAirports[1].longitude]],\n        pathOptions: {\n          color: 'red',\n          dashArray: '10,10',\n          weight: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), routes.map(([a1, a2], idx) => /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: [[a1.latitude, a1.longitude], [a2.latitude, a2.longitude]],\n        pathOptions: {\n          color: 'blue',\n          dashArray: '8,6',\n          weight: 1\n        }\n      }, `route-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MapLegend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"darkMode form-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"darkMode\",\n        placeholder: \"City 1\",\n        value: city1,\n        onChange: e => setCity1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"darkMode\",\n        placeholder: \"City 2\",\n        value: city2,\n        onChange: e => setCity2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnectCities,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ml-6 bg-grax-100 p-[0.3rem_0.6rem] br-4 darkModeTop3\",\n        onClick: () => navigate(\"/home\"),\n        children: \"\\u2B05 Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 3\n  }, this);\n};\n_s(POIMap, \"Pz/Rr82rxwjVnwv18GWSvHsO9mU=\", false, function () {\n  return [useNavigate];\n});\n_c = POIMap;\nexport default POIMap;\nvar _c;\n$RefreshReg$(_c, \"POIMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","Polyline","L","MapLegend","POIPopup","useNavigate","jsxDEV","_jsxDEV","poiIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","airportIcon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","shadowUrl","POIMap","_s","pois","setPois","airports","setAirports","selectedAirports","setSelectedAirports","city1","setCity1","city2","setCity2","routes","setRoutes","handleAirportClick","airport","prev","length","id","handleConnectCities","airportsCity1","filter","_airport$cityName","cityName","toLowerCase","trim","airportsCity2","_airport$cityName2","newRoutes","forEach","a1","a2","push","fetch","then","res","json","data","console","log","catch","err","error","navigate","className","children","center","zoom","minZoom","maxZoom","scrollWheelZoom","maxBounds","maxBoundsViscosity","url","attribution","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","map","poi","idx","position","latitude","longitude","icon","maxWidth","eventHandlers","click","name","description","positions","pathOptions","color","dashArray","weight","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Documents/GitHub/Vacation-Suggestions-App/frontend/src/pages/POIMap.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport \"./POIMap.css\";\r\nimport MapLegend from \"../components/MapLegend\";\r\nimport POIPopup from \"./POIPopup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Marker galben pentru POI\r\nconst poiIcon = new L.Icon({\r\n  iconUrl: \"https://maps.google.com/mapfiles/ms/icons/yellow-dot.png\",\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\n// Marker albastru pentru aeroporturi\r\nconst airportIcon = new L.Icon({\r\n  iconUrl: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl:\r\n    \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png\",\r\n  iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\r\n  shadowUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png\",\r\n});\r\n\r\nconst POIMap = () => {\r\n  const [pois, setPois] = useState([]);\r\n  const [airports, setAirports] = useState([]);\r\n  const [selectedAirports, setSelectedAirports] = useState([]);\r\n  const [city1, setCity1] = useState(\"\");\r\n  const [city2, setCity2] = useState(\"\");\r\n  const [routes, setRoutes] = useState([]); // array de perechi de aeroporturi conectate\r\n\r\n\r\n  const handleAirportClick = (airport) => {\r\n    setSelectedAirports((prev) => {\r\n      if (prev.length === 0) {\r\n        return [airport];\r\n      } else if (prev.length === 1) {\r\n        // dacă dai click pe același aeroport îl ignorăm\r\n        if (prev[0].id === airport.id) return prev;\r\n        return [prev[0], airport];\r\n      } else {\r\n        // dacă sunt deja 2 aeroporturi, resetează la primul click nou\r\n        return [airport];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleConnectCities = () => {\r\n    // Filtrăm aeroporturile după orașe (case insensitive)\r\n    const airportsCity1 = airports.filter(airport =>\r\n      airport.cityName?.toLowerCase() === city1.trim().toLowerCase()\r\n    );\r\n\r\n    const airportsCity2 = airports.filter(airport =>\r\n      airport.cityName?.toLowerCase() === city2.trim().toLowerCase()\r\n    );\r\n\r\n    // Construim toate perechile posibile între aeroporturile celor 2 orașe\r\n    let newRoutes = [];\r\n    airportsCity1.forEach(a1 => {\r\n      airportsCity2.forEach(a2 => {\r\n        newRoutes.push([a1, a2]);\r\n      });\r\n    });\r\n\r\n    setRoutes(newRoutes);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/points_of_interests\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"POI data:\", data); \r\n        setPois(data);\r\n      })\r\n      .catch((err) => console.error(\"Failed to load POIs:\", err));\r\n  }, []);\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/api/airports\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"Airport data:\", data);\r\n        setAirports(data);\r\n      })\r\n      .catch((err) => console.error(\"Failed to load Airports:\", err));\r\n  }, []);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n  <div className=\"map-wrapper\">\r\n      <MapContainer\r\n        center={[40.71427, -74.00597]}\r\n        zoom={3}\r\n        minZoom={3}\r\n        maxZoom={15}\r\n        scrollWheelZoom={true}\r\n        className=\"leaflet-container\"\r\n        maxBounds={[\r\n          [-85.05112878, -180],\r\n          [85.05112878, 180],\r\n        ]}\r\n        maxBoundsViscosity={1}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; OpenStreetMap contributors\"\r\n          noWrap={true}\r\n        />\r\n\r\n        {pois.map((poi, idx) => (\r\n          <Marker\r\n            key={`poi-${idx}`}\r\n            position={[poi.latitude, poi.longitude]}\r\n            icon={poiIcon}\r\n          >\r\n            <Popup maxWidth={240}>\r\n              <POIPopup poi={poi} />\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n\r\n        {airports.map((airport, idx) => (\r\n          <Marker\r\n            key={`airport-${idx}`}\r\n            position={[airport.latitude, airport.longitude]}\r\n            icon={airportIcon}\r\n            eventHandlers={{\r\n              click: () => handleAirportClick(airport),\r\n            }}\r\n          >\r\n            <Popup>\r\n              <strong>{airport.name}</strong>\r\n              <br />\r\n              {airport.description || \"No description\"}\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n\r\n        {selectedAirports.length === 2 && (\r\n          <Polyline\r\n            positions={[\r\n              [selectedAirports[0].latitude, selectedAirports[0].longitude],\r\n              [selectedAirports[1].latitude, selectedAirports[1].longitude],\r\n            ]}\r\n            pathOptions={{\r\n              color: 'red',\r\n              dashArray: '10,10',\r\n              weight: 3,\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {routes.map(([a1, a2], idx) => (\r\n          <Polyline\r\n            key={`route-${idx}`}\r\n            positions={[\r\n              [a1.latitude, a1.longitude],\r\n              [a2.latitude, a2.longitude],\r\n            ]}\r\n            pathOptions={{\r\n              color: 'blue',\r\n              dashArray: '8,6',\r\n              weight: 1,\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        <MapLegend />\r\n      </MapContainer>\r\n\r\n      {/* FORMULAR CA OVERLAY PE HARTĂ */}\r\n      <div className=\"darkMode form-overlay\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"darkMode\"\r\n          placeholder=\"City 1\"\r\n          value={city1}\r\n          onChange={(e) => setCity1(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"darkMode\"\r\n          placeholder=\"City 2\"\r\n          value={city2}\r\n          onChange={(e) => setCity2(e.target.value)}\r\n        />\r\n        <button onClick={handleConnectCities}>Connect</button>\r\n\r\n        {/* 👇 Buton nou pentru Home */}\r\n        <button\r\n          className=\"ml-6 bg-grax-100 p-[0.3rem_0.6rem] br-4 darkModeTop3\"\r\n          onClick={() => navigate(\"/home\")}\r\n        >\r\n          ⬅ Home\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default POIMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAChF,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,cAAc;AACrB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,IAAIN,CAAC,CAACO,IAAI,CAAC;EACzBC,OAAO,EAAE,0DAA0D;EACnEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAG,IAAIZ,CAAC,CAACO,IAAI,CAAC;EAC7BC,OAAO,EAAE,wDAAwD;EACjEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;AAGF,OAAOX,CAAC,CAACO,IAAI,CAACM,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3Cf,CAAC,CAACO,IAAI,CAACM,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EACX,gEAAgE;EAClET,OAAO,EAAE,6DAA6D;EACtEU,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqC,MAAM,EAAEC,SAAS,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAG1C,MAAMuC,kBAAkB,GAAIC,OAAO,IAAK;IACtCR,mBAAmB,CAAES,IAAI,IAAK;MAC5B,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QACrB,OAAO,CAACF,OAAO,CAAC;MAClB,CAAC,MAAM,IAAIC,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QAC5B;QACA,IAAID,IAAI,CAAC,CAAC,CAAC,CAACE,EAAE,KAAKH,OAAO,CAACG,EAAE,EAAE,OAAOF,IAAI;QAC1C,OAAO,CAACA,IAAI,CAAC,CAAC,CAAC,EAAED,OAAO,CAAC;MAC3B,CAAC,MAAM;QACL;QACA,OAAO,CAACA,OAAO,CAAC;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,MAAMC,aAAa,GAAGhB,QAAQ,CAACiB,MAAM,CAACN,OAAO;MAAA,IAAAO,iBAAA;MAAA,OAC3C,EAAAA,iBAAA,GAAAP,OAAO,CAACQ,QAAQ,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,WAAW,CAAC,CAAC,MAAKhB,KAAK,CAACiB,IAAI,CAAC,CAAC,CAACD,WAAW,CAAC,CAAC;IAAA,CAChE,CAAC;IAED,MAAME,aAAa,GAAGtB,QAAQ,CAACiB,MAAM,CAACN,OAAO;MAAA,IAAAY,kBAAA;MAAA,OAC3C,EAAAA,kBAAA,GAAAZ,OAAO,CAACQ,QAAQ,cAAAI,kBAAA,uBAAhBA,kBAAA,CAAkBH,WAAW,CAAC,CAAC,MAAKd,KAAK,CAACe,IAAI,CAAC,CAAC,CAACD,WAAW,CAAC,CAAC;IAAA,CAChE,CAAC;;IAED;IACA,IAAII,SAAS,GAAG,EAAE;IAClBR,aAAa,CAACS,OAAO,CAACC,EAAE,IAAI;MAC1BJ,aAAa,CAACG,OAAO,CAACE,EAAE,IAAI;QAC1BH,SAAS,CAACI,IAAI,CAAC,CAACF,EAAE,EAAEC,EAAE,CAAC,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFlB,SAAS,CAACe,SAAS,CAAC;EACtB,CAAC;EAGDtD,SAAS,CAAC,MAAM;IACd2D,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,IAAI,CAAC;MAC9BlC,OAAO,CAACkC,IAAI,CAAC;IACf,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EACNnE,SAAS,CAAC,MAAM;IACd2D,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;MAClChC,WAAW,CAACgC,IAAI,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAED,GAAG,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EACN,MAAME,QAAQ,GAAG3D,WAAW,CAAC,CAAC;EAE9B,oBACAE,OAAA;IAAK0D,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxB3D,OAAA,CAACV,YAAY;MACXsE,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAE;MAC9BC,IAAI,EAAE,CAAE;MACRC,OAAO,EAAE,CAAE;MACXC,OAAO,EAAE,EAAG;MACZC,eAAe,EAAE,IAAK;MACtBN,SAAS,EAAC,mBAAmB;MAC7BO,SAAS,EAAE,CACT,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,EACpB,CAAC,WAAW,EAAE,GAAG,CAAC,CAClB;MACFC,kBAAkB,EAAE,CAAE;MAAAP,QAAA,gBAEtB3D,OAAA,CAACT,SAAS;QACR4E,GAAG,EAAC,oDAAoD;QACxDC,WAAW,EAAC,iCAAmC;QAC/CC,MAAM,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,EAEDzD,IAAI,CAAC0D,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACjB5E,OAAA,CAACR,MAAM;QAELqF,QAAQ,EAAE,CAACF,GAAG,CAACG,QAAQ,EAAEH,GAAG,CAACI,SAAS,CAAE;QACxCC,IAAI,EAAE/E,OAAQ;QAAA0D,QAAA,eAEd3D,OAAA,CAACP,KAAK;UAACwF,QAAQ,EAAE,GAAI;UAAAtB,QAAA,eACnB3D,OAAA,CAACH,QAAQ;YAAC8E,GAAG,EAAEA;UAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC,GANH,OAAOG,GAAG,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOX,CACT,CAAC,EAEDvD,QAAQ,CAACwD,GAAG,CAAC,CAAC7C,OAAO,EAAE+C,GAAG,kBACzB5E,OAAA,CAACR,MAAM;QAELqF,QAAQ,EAAE,CAAChD,OAAO,CAACiD,QAAQ,EAAEjD,OAAO,CAACkD,SAAS,CAAE;QAChDC,IAAI,EAAEzE,WAAY;QAClB2E,aAAa,EAAE;UACbC,KAAK,EAAEA,CAAA,KAAMvD,kBAAkB,CAACC,OAAO;QACzC,CAAE;QAAA8B,QAAA,eAEF3D,OAAA,CAACP,KAAK;UAAAkE,QAAA,gBACJ3D,OAAA;YAAA2D,QAAA,EAAS9B,OAAO,CAACuD;UAAI;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAC/BzE,OAAA;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACL5C,OAAO,CAACwD,WAAW,IAAI,gBAAgB;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC;MAAC,GAXH,WAAWG,GAAG,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYf,CACT,CAAC,EAEDrD,gBAAgB,CAACW,MAAM,KAAK,CAAC,iBAC5B/B,OAAA,CAACN,QAAQ;QACP4F,SAAS,EAAE,CACT,CAAClE,gBAAgB,CAAC,CAAC,CAAC,CAAC0D,QAAQ,EAAE1D,gBAAgB,CAAC,CAAC,CAAC,CAAC2D,SAAS,CAAC,EAC7D,CAAC3D,gBAAgB,CAAC,CAAC,CAAC,CAAC0D,QAAQ,EAAE1D,gBAAgB,CAAC,CAAC,CAAC,CAAC2D,SAAS,CAAC,CAC7D;QACFQ,WAAW,EAAE;UACXC,KAAK,EAAE,KAAK;UACZC,SAAS,EAAE,OAAO;UAClBC,MAAM,EAAE;QACV;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACF,EAEA/C,MAAM,CAACgD,GAAG,CAAC,CAAC,CAAC9B,EAAE,EAAEC,EAAE,CAAC,EAAE+B,GAAG,kBACxB5E,OAAA,CAACN,QAAQ;QAEP4F,SAAS,EAAE,CACT,CAAC1C,EAAE,CAACkC,QAAQ,EAAElC,EAAE,CAACmC,SAAS,CAAC,EAC3B,CAAClC,EAAE,CAACiC,QAAQ,EAAEjC,EAAE,CAACkC,SAAS,CAAC,CAC3B;QACFQ,WAAW,EAAE;UACXC,KAAK,EAAE,MAAM;UACbC,SAAS,EAAE,KAAK;UAChBC,MAAM,EAAE;QACV;MAAE,GATG,SAASd,GAAG,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUpB,CACF,CAAC,eAEFzE,OAAA,CAACJ,SAAS;QAAA0E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGfzE,OAAA;MAAK0D,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpC3D,OAAA;QACE2F,IAAI,EAAC,MAAM;QACXjC,SAAS,EAAC,UAAU;QACpBkC,WAAW,EAAC,QAAQ;QACpBC,KAAK,EAAEvE,KAAM;QACbwE,QAAQ,EAAGC,CAAC,IAAKxE,QAAQ,CAACwE,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFzE,OAAA;QACE2F,IAAI,EAAC,MAAM;QACXjC,SAAS,EAAC,UAAU;QACpBkC,WAAW,EAAC,QAAQ;QACpBC,KAAK,EAAErE,KAAM;QACbsE,QAAQ,EAAGC,CAAC,IAAKtE,QAAQ,CAACsE,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFzE,OAAA;QAAQiG,OAAO,EAAEhE,mBAAoB;QAAA0B,QAAA,EAAC;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGtDzE,OAAA;QACE0D,SAAS,EAAC,sDAAsD;QAChEuC,OAAO,EAAEA,CAAA,KAAMxC,QAAQ,CAAC,OAAO,CAAE;QAAAE,QAAA,EAClC;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAGV,CAAC;AAAC1D,EAAA,CAlLID,MAAM;EAAA,QAgEOhB,WAAW;AAAA;AAAAoG,EAAA,GAhExBpF,MAAM;AAoLZ,eAAeA,MAAM;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}